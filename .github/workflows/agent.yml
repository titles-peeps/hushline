name: agent

on:
  issues:
    types: [labeled]
  workflow_dispatch:
    inputs:
      issue:
        description: "Issue number to work on"
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  run-agent:
    # Use your self-hosted runner; this also works on GH-hosted if you change to ubuntu-latest.
    runs-on: self-hosted

    env:
      # Passed to ops/agent.sh
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      FLASK_ENV: test
      DATABASE_URL: sqlite:///./test.db
      # Ollama defaults (harmless if not present)
      OLLAMA_API_BASE: http://127.0.0.1:11434
      OLLAMA_HOST: http://127.0.0.1:11434
      # Python venv location inside workspace
      VENV: ${{ github.workspace }}/.venv

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ----------------------------
      # Deps: GitHub-hosted vs self-hosted
      # ----------------------------
      - name: Install system deps (GitHub-hosted only)
        if: ${{ !contains(runner.labels, 'self-hosted') }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Check deps (self-hosted)
        if: ${{ contains(runner.labels, 'self-hosted') }}
        run: |
          for b in jq curl; do
            command -v "$b" >/dev/null || { echo "Missing $b on self-hosted runner"; exit 1; }
          done

      # ----------------------------
      # Python & Aider
      # ----------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Create venv & install deps
        run: |
          python -m venv "$VENV"
          source "$VENV/bin/activate"
          pip install --upgrade pip
          # Keep aider version explicit for reproducibility
          pip install "aider-chat==0.86.1" pytest

      - name: Make agent.sh executable
        run: |
          chmod +x ops/agent.sh

      # ----------------------------
      # Determine issue number
      # ----------------------------
      - name: Resolve issue number
        id: issue
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "num=${{ inputs.issue }}" >> "$GITHUB_OUTPUT"
          else
            # issues:labeled
            echo "num=${{ github.event.issue.number }}" >> "$GITHUB_OUTPUT"
          fi
          echo "Resolved issue #$(cat $GITHUB_OUTPUT | sed -n 's/^num=//p')"

      # ----------------------------
      # Optional: warm up Ollama (self-hosted only)
      # ----------------------------
      - name: Warm up Ollama (self-hosted only)
        if: ${{ contains(runner.labels, 'self-hosted') }}
        shell: bash
        continue-on-error: true
        run: |
          set -e
          curl -fsS "$OLLAMA_API_BASE/api/tags" | jq -r '.models[].name' || true
          # Pull coder model if not present (no-op if it exists)
          curl -fsS "$OLLAMA_API_BASE/api/pull" \
            -H 'Content-Type: application/json' \
            -d '{"model":"qwen2.5-coder:7b-instruct"}' || true

      # ----------------------------
      # Run the agent
      # ----------------------------
      - name: Run agent
        env:
          PATH: ${{ env.VENV }}/bin:${{ env.PATH }}
        run: |
          echo "DATABASE_URL=${DATABASE_URL}" >> "$GITHUB_ENV"
          ./ops/agent.sh "${{ steps.issue.outputs.num }}"
