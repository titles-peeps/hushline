name: hushline-agent

on:
  workflow_dispatch:
    inputs:
      issue:
        description: "Issue number to work on"
        required: true
  issues:
    types: [labeled]

permissions:
  contents: write        # push branches
  pull-requests: write   # open/comment PRs
  issues: write          # comment on issues

concurrency:
  group: agent-${{ github.ref || format('issue-{0}', github.event.issue.number) }}
  cancel-in-progress: false

jobs:
  run:
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'issues' && github.event.action == 'labeled' && github.event.label.name == 'agent')
    runs-on: self-hosted

    timeout-minutes: 30

    env:
      # App env
      DATABASE_URL: sqlite:///./test.db
      FLASK_ENV: test
      # Auth for gh CLI used by ops/agent.sh
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Figure out issue number
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "issue=${{ inputs.issue }}" >> "$GITHUB_OUTPUT"
          else
            echo "issue=${{ github.event.issue.number }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Quick tool sanity
        shell: bash
        run: |
          set -euo pipefail
          echo "::group::versions"
          command -v git && git --version
          command -v gh && gh --version
          command -v bash && bash --version | head -n1
          command -v curl && curl --version | head -n1
          command -v jq && jq --version
          echo "::endgroup::"
          # Ensure the script is executable
          chmod +x ops/agent.sh

      - name: Ollama health check (non-fatal)
        shell: bash
        continue-on-error: true
        run: |
          set -euo pipefail
          : "${OLLAMA_API_BASE:=http://127.0.0.1:11434}"
          echo "Using OLLAMA_API_BASE=$OLLAMA_API_BASE"
          curl -sSf "$OLLAMA_API_BASE/api/tags" | jq '.models | length'

      - name: Run agent (debug)
        shell: bash
        run: |
          set -euo pipefail
          echo "DATABASE_URL=${DATABASE_URL}" >> "$GITHUB_ENV"
          echo "::group::agent-run"
          bash -x ./ops/agent.sh "${{ steps.pick.outputs.issue }}" 2>&1 | tee agent.log
          echo "::endgroup::"
        env:
          # Optional hints for your script; harmless if unused
          OLLAMA_API_BASE: ${{ env.OLLAMA_API_BASE }}
          OLLAMA_HOST: ${{ env.OLLAMA_API_BASE }}

      - name: Upload agent artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: agent-artifacts-${{ steps.pick.outputs.issue }}
          path: |
            agent.log
            .aider.chat.history.md
            .aider.input.history
          if-no-files-found: ignore
