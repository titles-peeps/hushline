# .github/workflows/agent.yml
name: agent

on:
  issues:
    types: [labeled]
  workflow_dispatch:
    inputs:
      issue:
        description: "Issue number to work on"
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  run-agent:
    runs-on: self-hosted

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      FLASK_ENV: test
      DATABASE_URL: sqlite:///./test.db
      OLLAMA_API_BASE: http://127.0.0.1:11434
      OLLAMA_HOST: http://127.0.0.1:11434
      VENV: ${{ github.workspace }}/.venv

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Sanity check deps (self-hosted)
        run: |
          for b in jq curl; do
            command -v "$b" >/dev/null || { echo "Missing $b on self-hosted runner"; exit 1; }
          done

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Create venv & install deps
        run: |
          python -m venv "$VENV"
          source "$VENV/bin/activate"
          pip install --upgrade pip
          pip install "aider-chat==0.86.1" pytest

      - name: Make agent executable
        run: chmod +x ops/agent.sh

      - name: Resolve issue number
        id: issue
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "num=${{ inputs.issue }}" >> "$GITHUB_OUTPUT"
          else
            echo "num=${{ github.event.issue.number }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Warm up Ollama
        continue-on-error: true
        run: |
          set -e
          curl -fsS "$OLLAMA_API_BASE/api/tags" | jq -r '.models[].name' || true
          curl -fsS "$OLLAMA_API_BASE/api/pull" \
            -H 'Content-Type: application/json' \
            -d '{"model":"qwen2.5-coder:7b-instruct"}' || true

      - name: Run agent
        env:
          PATH: ${{ env.VENV }}/bin:${{ env.PATH }}
        run: |
          echo "DATABASE_URL=${DATABASE_URL}" >> "$GITHUB_ENV"
          ./ops/agent.sh "${{ steps.issue.outputs.num }}"
